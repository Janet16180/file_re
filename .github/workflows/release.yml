name: Release

on:
  workflow_dispatch:
    
jobs:
  release:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install yq
        run: |
          pip install yq

      - name: Parse tag version
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "no-tags-found")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Update Cargo.toml version
        run: |
          yq eval ".package.version = \"${{ env.LATEST_TAG }}\"" -i file_re/Cargo.toml

      - name: Commit updated Cargo.toml
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add file_re/Cargo.toml
          git commit -m "Bump version to ${{ env.LATEST_TAG }}"
          git push

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: |
            wheels-linux-x86_64
            wheels-linux-x86
            wheels-linux-aarch64
            wheels-linux-armv7
            wheels-linux-s390x
            wheels-linux-ppc64le
            wheels-musllinux-x86_64
            wheels-musllinux-x86
            wheels-musllinux-aarch64
            wheels-musllinux-armv7
            wheels-windows-x64
            wheels-windows-x86
            wheels-macos-x86_64
            wheels-macos-aarch64
            wheels-sdist

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*