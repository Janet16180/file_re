name: Release

on:
  workflow_dispatch:
    
jobs:
  release:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Parse tag version
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "no-tags-found")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          CARGO_VERSION=$(grep '^version' file_re/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "CARGO_VERSION=$CARGO_VERSION" >> $GITHUB_ENV

      - name: Check version match
        run: |
          if [ "${{ env.LATEST_TAG }}" != "${{ env.CARGO_VERSION }}" ]; then
            echo "Version mismatch: Latest tag (${{ env.LATEST_TAG }}) does not match Cargo.toml version (${{ env.CARGO_VERSION }})."
            exit 1
          fi
          echo "Version match: Latest tag (${{ env.LATEST_TAG }}) matches Cargo.toml version (${{ env.CARGO_VERSION }})."

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: |
            wheels-linux-x86_64
            wheels-linux-x86
            wheels-linux-aarch64
            wheels-linux-armv7
            wheels-linux-s390x
            wheels-linux-ppc64le
            wheels-musllinux-x86_64
            wheels-musllinux-x86
            wheels-musllinux-aarch64
            wheels-musllinux-armv7
            wheels-windows-x64
            wheels-windows-x86
            wheels-macos-x86_64
            wheels-macos-aarch64
            wheels-sdist

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*